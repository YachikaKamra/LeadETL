{
	"name": "LEADETL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SCEQRY_TB",
						"type": "DatasetReference"
					},
					"name": "EQRYTB"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "MappingCMCD"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "Mapping2CMCD"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "Mapping3CMCD"
				},
				{
					"dataset": {
						"referenceName": "SDENSC_TB",
						"type": "DatasetReference"
					},
					"name": "Mapping4SDENSC"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "TransformationsStep1"
				},
				{
					"name": "MappingSelect"
				},
				{
					"name": "FilterDSO0002"
				},
				{
					"name": "EnquiryStatusLookup"
				},
				{
					"name": "Mapping2Select"
				},
				{
					"name": "FilterDSO0013"
				},
				{
					"name": "EnquiryType1Lookup"
				},
				{
					"name": "Mapping3Select"
				},
				{
					"name": "FilterDSO0012"
				},
				{
					"name": "EnquiryCategoryTypeLookup"
				},
				{
					"name": "Mapping4Select"
				},
				{
					"name": "FilterDSO0001"
				},
				{
					"name": "EnquirySubSourceNameLookup"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EQRY_DLR_NO as string,",
				"          EQRY_ENQRY_NO as string,",
				"          EQRY_CORP_NO as string,",
				"          EQRY_CMPN_NO as string,",
				"          EQRY_DATE as string,",
				"          EQRY_SRC_CODE as string,",
				"          EQRY_STAT as string,",
				"          EQRY_TYPE as string,",
				"          EQRY_TEST_DRVR_DATE as string,",
				"          EQRY_FNCE_YN as string,",
				"          EQRY_FNCER_CODE as string,",
				"          EQRY_LOAN_AMT as string,",
				"          EQRY_TENOR_MNTHS as string,",
				"          EQRY_EXCHG_YN as string,",
				"          EQRY_EXCHG_MODEL_CODE as string,",
				"          EQRY_EXCHG_SRC_CODE as string,",
				"          EQRY_EXPCT_PRICE as string,",
				"          EQRY_QUOTD_PRICE as string,",
				"          EQRY_CLSE_DATE as string,",
				"          EQRY_CLSE_TYPE as string,",
				"          EQRY_CLSE_RMRKS as string,",
				"          EQRY_EMP_NO as string,",
				"          EQRY_CUST_NO as string,",
				"          EQRY_LISTD_CORP as string,",
				"          EQRY_CORP_NAME as string,",
				"          EQRY_RFRL_BY as string,",
				"          EQRY_CRTE_DTIME as timestamp,",
				"          EQRY_CRTE_EMP_NO as string,",
				"          EQRY_UPDT_DTIME as string,",
				"          EQRY_UPDT_EMP_NO as string,",
				"          EQRY_EQFU_SEQ as string,",
				"          EQRY_UPDT_DATE as string,",
				"          EQRY_TEST_DRIVE_YN as string,",
				"          EQRY_SR_NUM as string,",
				"          EQRY_SR_TYPE as string,",
				"          EQRY_FLW_STATUS as string,",
				"          EQRY_ASSOCIATE_ID as string,",
				"          EQRY_RSO_ID as string,",
				"          EQRY_FUEL_TYPE as string,",
				"          EQRY_PRESENT_CAR_YN as string,",
				"          EQRY_MAKER_CODE as string,",
				"          EQRY_TD_VIN as string,",
				"          EQRY_CUST_BLOCK as string,",
				"          EQRY_BULK_SALE as string,",
				"          EQRY_P_MODL_YEAR as string,",
				"          EQRY_CLS_VAL as string,",
				"          EQRY_INCOM_GROUP as string,",
				"          EQRY_REFL_ID as string,",
				"          EQRY_REFL_PUNCH_DLR_NO as string,",
				"          EQRY_PLAN_DATE as string,",
				"          EQRY_ATIVT_NAME_CODE as string,",
				"          EQRY_ATIVT_LOC_CODE as string,",
				"          EQRY_NEWCAR_YN as string,",
				"          EQRY_FCALL_EMP_NO as string,",
				"          EQRY_APNT_DTIME as string,",
				"          VIST_DTIME as string,",
				"          LEAV_DTIME as string,",
				"          EQRY_CTGR_CODE as integer,",
				"          EQRY_SUB_SRC_CODE as string,",
				"          EQRY_CLSE_GRP_TYPE as string,",
				"          EQRY_BUDG_TYPE as string,",
				"          EQRY_CERT_TYPE as string,",
				"          EQRY_UC_SC_EMP_NO as string,",
				"          EQRY_TDRIVE_RMRKS as string,",
				"          EQRY_VC_RMRKS as string,",
				"          EQRY_REQ_TYPE as string,",
				"          EQRY_EMAILSEND_YN as string,",
				"          EQRY_SRC_FLG as string,",
				"          EQRY_SR_NUM_REAL as string,",
				"          EQRY_ENG_TYP as string,",
				"          EQRY_TRNSM_TYP as string,",
				"          SOQ_TAG_YN as string,",
				"          EQRY_EVAL_YN as string,",
				"          EQRY_EXCH_DN as string,",
				"          EQRY_FINAL_BP as string,",
				"          EQRY_CAMPGN_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EQRYTB",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MappingCMCD",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping2CMCD",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as integer,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping3CMCD",
				"source(output(",
				"          ENSC_CMPN_NO as string,",
				"          ENSC_CORP_NO as string,",
				"          ENSC_GRP_CODE as string,",
				"          ENSC_CODE as string,",
				"          ENSC_GRP_NAME as string,",
				"          ENSC_NAME as string,",
				"          ENSC_PRIORITY as string,",
				"          ENSC_DELYN as string,",
				"          ENSC_CRTE_EMP_NO as string,",
				"          ENSC_CRTE_DTIME as string,",
				"          ENSC_UPDT_EMP_NO as string,",
				"          ENSC_UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping4SDENSC",
				"EQRYTB derive(Occup_Key = concat(EQRY_DLR_NO ,'|', EQRY_CUST_NO),",
				"          Comp_key = concat(EQRY_MAKER_CODE,'|',EQRY_EXCHG_MODEL_CODE),",
				"          {First Follow-Up KEY} = concat(EQRY_DLR_NO ,'|',EQRY_ENQRY_NO),",
				"          Key = concat(EQRY_ENQRY_NO,'|',EQRY_DLR_NO),",
				"          EY = left(EQRY_DATE,4),",
				"          ED = right(EQRY_DATE,2),",
				"          EM = substring(EQRY_DATE, 6, 2),",
				"          Enquiry_Source_Type = iif(EQRY_SRC_FLG== 'MOB','MySales',    iif(length(EQRY_SR_NUM_REAL)>0,'Online','DMS')),",
				"          {Allocated/Unallocated} = iif(length(trim(EQRY_EMP_NO))<1, 'Unallocated', 'Allocated'),",
				"          Flag = 'Enquiry') ~> TransformationsStep1",
				"MappingCMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_STAT = CMM_CODE,",
				"          Enquiry_Status = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MappingSelect",
				"MappingSelect filter(CMM_GRP_CODE=='DSO0002') ~> FilterDSO0002",
				"TransformationsStep1, FilterDSO0002 lookup(EQRYTB@EQRY_STAT == MappingSelect@EQRY_STAT,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Status, false),",
				"     broadcast: 'auto')~> EnquiryStatusLookup",
				"Mapping2CMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_TYPE = CMM_CODE,",
				"          Enquiry_Type1 = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mapping2Select",
				"Mapping2Select filter(CMM_GRP_CODE=='DSO0013' && EQRY_TYPE!='N') ~> FilterDSO0013",
				"EnquiryStatusLookup, FilterDSO0013 lookup(EQRYTB@EQRY_TYPE == Mapping2Select@EQRY_TYPE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Type1, false),",
				"     broadcast: 'auto')~> EnquiryType1Lookup",
				"Mapping3CMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_CTGR_CODE = CMM_CODE,",
				"          Enquiry_Category_Type = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mapping3Select",
				"Mapping3Select filter(CMM_GRP_CODE=='DSO0012') ~> FilterDSO0012",
				"EnquiryType1Lookup, FilterDSO0012 lookup(EQRYTB@EQRY_CTGR_CODE == Mapping3Select@EQRY_CTGR_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Category_Type, false),",
				"     broadcast: 'auto')~> EnquiryCategoryTypeLookup",
				"Mapping4SDENSC select(mapColumn(",
				"          ENSC_GRP_CODE,",
				"          EQRY_SUB_SRC_CODE = ENSC_CODE,",
				"          Enquiry_Sub_Source_Name = ENSC_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mapping4Select",
				"Mapping4Select filter(ENSC_GRP_CODE=='DSO0001') ~> FilterDSO0001",
				"EnquiryCategoryTypeLookup, FilterDSO0001 lookup(EQRYTB@EQRY_SUB_SRC_CODE == Mapping4Select@EQRY_SUB_SRC_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Sub_Source_Name, false),",
				"     broadcast: 'auto')~> EnquirySubSourceNameLookup",
				"EnquirySubSourceNameLookup select(mapColumn(",
				"          EQRY_SUB_SRC_CODE = EQRYTB@EQRY_SUB_SRC_CODE,",
				"          Enquiry_Sub_Source_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}
{
	"name": "LEADETL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SCEQRY_TB",
						"type": "DatasetReference"
					},
					"name": "EQRYTB"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "MappingCMCD"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "Mapping2CMCD"
				},
				{
					"dataset": {
						"referenceName": "CMCD",
						"type": "DatasetReference"
					},
					"name": "Mapping3CMCD"
				},
				{
					"dataset": {
						"referenceName": "SDENSC_TB",
						"type": "DatasetReference"
					},
					"name": "Mapping4SDENSC"
				},
				{
					"dataset": {
						"referenceName": "CDCUDT",
						"type": "DatasetReference"
					},
					"name": "CDCUDT"
				},
				{
					"dataset": {
						"referenceName": "Occupation",
						"type": "DatasetReference"
					},
					"name": "MappingOccupation"
				},
				{
					"dataset": {
						"referenceName": "CDCSPM",
						"type": "DatasetReference"
					},
					"name": "CDCSPM"
				},
				{
					"dataset": {
						"referenceName": "UCMAKE",
						"type": "DatasetReference"
					},
					"name": "UCMAKE"
				},
				{
					"dataset": {
						"referenceName": "UCMODL",
						"type": "DatasetReference"
					},
					"name": "UCMODL"
				},
				{
					"dataset": {
						"referenceName": "EQCR",
						"type": "DatasetReference"
					},
					"name": "EQCR"
				},
				{
					"dataset": {
						"referenceName": "Teamleader",
						"type": "DatasetReference"
					},
					"name": "Teamleader"
				},
				{
					"dataset": {
						"referenceName": "EQFU",
						"type": "DatasetReference"
					},
					"name": "EQFU"
				},
				{
					"dataset": {
						"referenceName": "SOBKNG",
						"type": "DatasetReference"
					},
					"name": "SOBKNG"
				},
				{
					"dataset": {
						"referenceName": "SWINVC",
						"type": "DatasetReference"
					},
					"name": "SWINVC"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "TransformationsStep1"
				},
				{
					"name": "MappingSelect"
				},
				{
					"name": "FilterDSO0002"
				},
				{
					"name": "EnquiryStatusLookup"
				},
				{
					"name": "CMCDSelect"
				},
				{
					"name": "FilterDSO0013"
				},
				{
					"name": "EnquiryType1Lookup"
				},
				{
					"name": "Mapping3Select"
				},
				{
					"name": "FilterDSO0012"
				},
				{
					"name": "EnquiryCategoryTypeLookup"
				},
				{
					"name": "Mapping4Select"
				},
				{
					"name": "FilterDSO0001"
				},
				{
					"name": "EnquirySubSourceNameLookup"
				},
				{
					"name": "Transformation2Step1"
				},
				{
					"name": "Transformation3Step1"
				},
				{
					"name": "Transformation1Step2"
				},
				{
					"name": "Transformation1Step3"
				},
				{
					"name": "Transformation1Step5"
				},
				{
					"name": "MappingOccSelect"
				},
				{
					"name": "OccNameLookup"
				},
				{
					"name": "CDCUDTSelect"
				},
				{
					"name": "LeftJoinCDCUDT"
				},
				{
					"name": "CDCSPMSelect"
				},
				{
					"name": "Transformation1Step6"
				},
				{
					"name": "LeftJoinCDCSPM"
				},
				{
					"name": "UCMAKESelect"
				},
				{
					"name": "LeftJoinUCMAKE"
				},
				{
					"name": "Transformation1Step8"
				},
				{
					"name": "UCMODLSelect"
				},
				{
					"name": "LeftJoinUCMODL"
				},
				{
					"name": "EQCRSelect"
				},
				{
					"name": "LeftJoinEQCR"
				},
				{
					"name": "EQRYSelect1"
				},
				{
					"name": "Transformation1Step9"
				},
				{
					"name": "TeamLeaderSelect"
				},
				{
					"name": "EQFUSelect"
				},
				{
					"name": "SOBKNGSelect"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EQRY_DLR_NO as string,",
				"          EQRY_ENQRY_NO as string,",
				"          EQRY_CORP_NO as string,",
				"          EQRY_CMPN_NO as string,",
				"          EQRY_DATE as string,",
				"          EQRY_SRC_CODE as string,",
				"          EQRY_STAT as string,",
				"          EQRY_TYPE as string,",
				"          EQRY_TEST_DRVR_DATE as string,",
				"          EQRY_FNCE_YN as string,",
				"          EQRY_FNCER_CODE as string,",
				"          EQRY_LOAN_AMT as string,",
				"          EQRY_TENOR_MNTHS as string,",
				"          EQRY_EXCHG_YN as string,",
				"          EQRY_EXCHG_MODEL_CODE as string,",
				"          EQRY_EXCHG_SRC_CODE as string,",
				"          EQRY_EXPCT_PRICE as string,",
				"          EQRY_QUOTD_PRICE as string,",
				"          EQRY_CLSE_DATE as string,",
				"          EQRY_CLSE_TYPE as string,",
				"          EQRY_CLSE_RMRKS as string,",
				"          EQRY_EMP_NO as string,",
				"          EQRY_CUST_NO as string,",
				"          EQRY_LISTD_CORP as string,",
				"          EQRY_CORP_NAME as string,",
				"          EQRY_RFRL_BY as string,",
				"          EQRY_CRTE_DTIME as timestamp,",
				"          EQRY_CRTE_EMP_NO as string,",
				"          EQRY_UPDT_DTIME as string,",
				"          EQRY_UPDT_EMP_NO as string,",
				"          EQRY_EQFU_SEQ as string,",
				"          EQRY_UPDT_DATE as string,",
				"          EQRY_TEST_DRIVE_YN as string,",
				"          EQRY_SR_NUM as string,",
				"          EQRY_SR_TYPE as string,",
				"          EQRY_FLW_STATUS as string,",
				"          EQRY_ASSOCIATE_ID as string,",
				"          EQRY_RSO_ID as string,",
				"          EQRY_FUEL_TYPE as string,",
				"          EQRY_PRESENT_CAR_YN as string,",
				"          EQRY_MAKER_CODE as string,",
				"          EQRY_TD_VIN as string,",
				"          EQRY_CUST_BLOCK as string,",
				"          EQRY_BULK_SALE as string,",
				"          EQRY_P_MODL_YEAR as string,",
				"          EQRY_CLS_VAL as string,",
				"          EQRY_INCOM_GROUP as string,",
				"          EQRY_REFL_ID as string,",
				"          EQRY_REFL_PUNCH_DLR_NO as string,",
				"          EQRY_PLAN_DATE as string,",
				"          EQRY_ATIVT_NAME_CODE as string,",
				"          EQRY_ATIVT_LOC_CODE as string,",
				"          EQRY_NEWCAR_YN as string,",
				"          EQRY_FCALL_EMP_NO as string,",
				"          EQRY_APNT_DTIME as string,",
				"          VIST_DTIME as string,",
				"          LEAV_DTIME as string,",
				"          EQRY_CTGR_CODE as integer,",
				"          EQRY_SUB_SRC_CODE as string,",
				"          EQRY_CLSE_GRP_TYPE as string,",
				"          EQRY_BUDG_TYPE as string,",
				"          EQRY_CERT_TYPE as string,",
				"          EQRY_UC_SC_EMP_NO as string,",
				"          EQRY_TDRIVE_RMRKS as string,",
				"          EQRY_VC_RMRKS as string,",
				"          EQRY_REQ_TYPE as string,",
				"          EQRY_EMAILSEND_YN as string,",
				"          EQRY_SRC_FLG as string,",
				"          EQRY_SR_NUM_REAL as string,",
				"          EQRY_ENG_TYP as string,",
				"          EQRY_TRNSM_TYP as string,",
				"          SOQ_TAG_YN as string,",
				"          EQRY_EVAL_YN as string,",
				"          EQRY_EXCH_DN as string,",
				"          EQRY_FINAL_BP as string,",
				"          EQRY_CAMPGN_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EQRYTB",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MappingCMCD",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping2CMCD",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as integer,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping3CMCD",
				"source(output(",
				"          ENSC_CMPN_NO as string,",
				"          ENSC_CORP_NO as string,",
				"          ENSC_GRP_CODE as string,",
				"          ENSC_CODE as string,",
				"          ENSC_GRP_NAME as string,",
				"          ENSC_NAME as string,",
				"          ENSC_PRIORITY as string,",
				"          ENSC_DELYN as string,",
				"          ENSC_CRTE_EMP_NO as string,",
				"          ENSC_CRTE_DTIME as string,",
				"          ENSC_UPDT_EMP_NO as string,",
				"          ENSC_UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Mapping4SDENSC",
				"source(output(",
				"          CUDT_CMPN_NO as string,",
				"          CUDT_CORP_NO as string,",
				"          CUDT_DLR_NO as string,",
				"          CUDT_CUST_NO as string,",
				"          CUDT_SEX_TYPE as string,",
				"          CUDT_RPLCE_PLCY_TYPE as string,",
				"          CUDT_CMPN_NAME as string,",
				"          CUDT_PSTCD_CODE as string,",
				"          CUDT_PCITY_CODE as string,",
				"          CUDT_PADDR1 as string,",
				"          CUDT_PADDR2 as string,",
				"          CUDT_PADDR3 as string,",
				"          CUDT_PPIN_CODE as string,",
				"          CUDT_PLCTY_CODE as string,",
				"          CUDT_JOB_CODE as string,",
				"          CUDT_DSITN_CODE as string,",
				"          CUDT_CMPN_TYPE as string,",
				"          CUDT_DPTMT_NAME as string,",
				"          CUDT_BIZ_TYPE as string,",
				"          CUDT_OSTCD_CODE as string,",
				"          CUDT_OCITY_CODE as string,",
				"          CUDT_OADDR1 as string,",
				"          CUDT_OADDR2 as string,",
				"          CUDT_OADDR3 as string,",
				"          CUDT_OPIN_CODE as string,",
				"          CUDT_OLCTY_CODE as string,",
				"          CUDT_OEXTNG_FLEET_SIZE as string,",
				"          CUDT_OHEAD_OFCE_LCTN_CODE as string,",
				"          CUDT_OSLRY_STR_CODE as string,",
				"          CUDT_OPMNT_RLSE_LCTN_CODE as string,",
				"          CUDT_CRTE_DTIME as string,",
				"          CUDT_CRTE_EMP_NO as string,",
				"          CUDT_UPDT_DTIME as string,",
				"          CUDT_UPDT_EMP_NO as string,",
				"          CUDT_INCOMME as string,",
				"          ACDM_CAREER_CODE as string,",
				"          JODIAC_CODE as string,",
				"          MTRL_STAUS as string,",
				"          CMPN_PHONE_NO as string,",
				"          CUDT_HOBBY_CODE as string,",
				"          CUDT_DLR_CODE as string,",
				"          SALUT_CODE as string,",
				"          CUDT_SPORT as string,",
				"          CUDT_NEWS as string,",
				"          CUDT_CNTTYPE as string,",
				"          CUDT_CNTDAY as string,",
				"          CUDT_CNTTIME as string,",
				"          CUDT_INDUSTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CDCUDT",
				"source(output(",
				"          OCCUPATION_CODE as string,",
				"          DETAIL as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MappingOccupation",
				"source(output(",
				"          CSPM_CMPN_NO as string,",
				"          CSPM_CORP_NO as string,",
				"          CSPM_DLR_NO as string,",
				"          CSPM_CUST_NO as string,",
				"          CSPM_CHRG_SALES_EMP_NO as string,",
				"          CSPM_CHRG_MNGER_EMP_NO as string,",
				"          CSPM_CUST_FRST_NAME as string,",
				"          CSPM_CUST_MIDL_NAME as string,",
				"          CSPM_CUST_LAST_NAME as string,",
				"          CSPM_CUST_FULL_NAME as string,",
				"          CSPM_CUST_TYPE as string,",
				"          CSPM_SVC_LABR_DSCNT_RATE as string,",
				"          CSPM_SVC_PART_DSCNT_RATE as string,",
				"          CSPM_BRTH_DATE as string,",
				"          CSPM_EMAIL as string,",
				"          CSPM_CMPN_TEL_NO as string,",
				"          CSPM_PAN_NO as string,",
				"          CSPM_CRTE_DTIME as string,",
				"          CSPM_CRTE_EMP_NO as string,",
				"          CSPM_UPDT_EMP_NO as string,",
				"          CSPM_UPDT_DTIME as string,",
				"          CSPM_SERVICE_DISCOUNT as string,",
				"          CSPM_CSTREG_NO as string,",
				"          CSPM_CSTREG_DATE as string,",
				"          CSPM_LSTREG_NO as string,",
				"          CSPM_LSTREG_DATE as string,",
				"          CSPM_REGIST_YN as string,",
				"          CSPM_AADHAR_NO as string,",
				"          CSPM_GST_NO as string,",
				"          CSPM_INSU_GST_NO as string,",
				"          CSPM_INSU_CUDT_ADDR as string,",
				"          CSPM_INSU_STCD_CODE as string,",
				"          CSPM_INSU_COM_NAME as string,",
				"          CSPM_INSU_IS_HAP as string,",
				"          CSPM_INSU_CON_NO as string,",
				"          CSPM_INSU_EMAIL_NO as string,",
				"          AADHAR_VRFI as string,",
				"          M_MOBL_PHONE_NO as string,",
				"          S_MOBL_PHONE_NO as string,",
				"          CSPM_CUST_PROPT as string,",
				"          CSPM_RESDC_PHONE_NO as string,",
				"          CSPM_WHATA_ID as string,",
				"          CSPM_CUST_ID as string,",
				"          CSPM_SMS_BLK_YN as string,",
				"          CSPM_EMAIL_BLK_YN as string,",
				"          CSPM_MARRI_DATE as string,",
				"          PASS_PORT_NO as string,",
				"          DRIVE_LICENSE_NO as string,",
				"          SALUT_CODE as string,",
				"          FILE_DOC_NO as string,",
				"          CSPM_DLR_CODE as string,",
				"          CSPM_RESDC_STD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CDCSPM",
				"source(output(",
				"          MAKE_CMPN_NO as string,",
				"          MAKE_CORP_NO as string,",
				"          MAKE_MAKER_CODE as string,",
				"          MAKE_FULL_DSCTN as string,",
				"          MAKE_SHORT_DSCTN as string,",
				"          MAKE_DELT_YN as string,",
				"          MAKE_PRIORITY as string,",
				"          MAKE_CRTE_DTIME as string,",
				"          MAKE_CRTE_EMP_NO as string,",
				"          MAKE_UPDT_DTIME as string,",
				"          MAKE_UPDT_EMP_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UCMAKE",
				"source(output(",
				"          MODL_CMPN_NO as string,",
				"          MODL_CORP_NO as string,",
				"          MODL_MAKER_CODE as string,",
				"          MODL_MODEL_CODE as string,",
				"          MODL_FULL_DSCTN as string,",
				"          MODL_SHORT_DSCTN as string,",
				"          MODL_VHCL_TYPE as string,",
				"          MODL_DELT_YN as string,",
				"          MODL_PRIORITY as string,",
				"          MODL_CRTE_DTIME as string,",
				"          MODL_CRTE_EMP_NO as string,",
				"          MODL_UPDT_DTIME as string,",
				"          MODL_UPDT_EMP_NO as string,",
				"          MODL_AVAILABLE_NEW_CAR as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UCMODL",
				"source(output(",
				"          EQCR_DLR_NO as string,",
				"          EQCR_ENQRY_NO as string,",
				"          EQCR_SEQ as string,",
				"          EQCR_CORP_NO as string,",
				"          EQCR_CMPN_NO as string,",
				"          EQCR_MODEL_CODE as string,",
				"          EQCR_VRNT_CODE as string,",
				"          EQCR_COLOR_CODE as string,",
				"          EQCR_QTY as string,",
				"          EQCR_CRTE_DTIME as string,",
				"          EQCR_CRTE_EMP_NO as string,",
				"          EQCR_UPDT_DTIME as string,",
				"          EQCR_UPDT_EMP_NO as string,",
				"          EQCR_INTCOLOR_CODE as string,",
				"          EQCR_MAKER_CODE as string,",
				"          EQCR_INT_COLOR_CODE as string,",
				"          EQCR_QUOTED_PRICE as string,",
				"          EQCR_EXPECTED_PRICE as string,",
				"          EQCR_FUEL_TYPE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EQCR",
				"source(output(",
				"          TEAM_LEADER as string,",
				"          TEAM_LEADER_JOINING_DATE as string,",
				"          TEAM_LEADER_LEAVE_DATE as string,",
				"          KEC as string,",
				"          KEC_NAME as string,",
				"          KEC_CODE as string,",
				"          KEC_JOIN_DATE as string,",
				"          KEC_LEAVE_DATE as string,",
				"          EQRY_ENQRY_NO as string,",
				"          EQRY_DLR_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Teamleader",
				"source(output(",
				"          EQFU_DLR_NO as string,",
				"          EQFU_ENQRY_NO as string,",
				"          EQFU_SEQ as string,",
				"          EQFU_CORP_NO as string,",
				"          EQFU_CMPN_NO as string,",
				"          EQFU_DATE as string,",
				"          EQFU_TIME as string,",
				"          EQFU_NTFU_DATE as string,",
				"          EQFU_NTFU_TIME as string,",
				"          EQFU_NTFU_DONE_YN as string,",
				"          EQFU_AFTR_ENQRY_TYPE as string,",
				"          EQFU_BFRE_ENQRY_TYPE as string,",
				"          EQFU_RMRKS as string,",
				"          EQFU_CRTE_DTIME as string,",
				"          EQFU_CRTE_EMP_NO as string,",
				"          EQFU_UPDT_DTIME as string,",
				"          EQFU_UPDT_EMP_NO as string,",
				"          EQFU_OTHER_CMTD_RMRKS as string,",
				"          EQFU_SCHME_RMRKS as string,",
				"          EQFU_MNGER_CALL_DATE as string,",
				"          EQFU_MNGER_REMRKS as string,",
				"          EQFU_ACTIVE_YN as string,",
				"          EQFU_STEP_CODE as string,",
				"          EQFU_SR_NUM as string,",
				"          EQFU_FLUP_TYPE as string,",
				"          EQFU_VERIFI_YN as string,",
				"          EQFU_NTFU_TYPE as string,",
				"          INFECT_RSON as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EQFU",
				"source(output(",
				"          BKNG_DLR_NO as string,",
				"          BKNG_NO as string,",
				"          BKNG_CORP_NO as string,",
				"          BKNG_CMPN_NO as string,",
				"          BKNG_DATE as string,",
				"          BKNG_MODEL_CODE as string,",
				"          BKNG_VRNT_CODE as string,",
				"          BKNG_COLOR_CODE as string,",
				"          BKNG_EXPCT_DLVRY_DATE as string,",
				"          BKNG_VRNT_PRICE as string,",
				"          BKNG_AMT as string,",
				"          BKNG_RCPT_TOTAL_AMT as string,",
				"          BKNG_RCPT_CMPLT_YN as string,",
				"          BKNG_ALCN_DATE as string,",
				"          BKNG_ALCN_VIN as string,",
				"          BKNG_FNCE_TYPE as string,",
				"          BKNG_FNCE_YN as string,",
				"          BKNG_FNCER_CODE as string,",
				"          BKNG_DSA_NAME as string,",
				"          BKNG_LOAN_AMT as string,",
				"          BKNG_TENOR_NMTHS as string,",
				"          BKNG_FILE_NO as string,",
				"          BKNG_DO_NO as string,",
				"          BKNG_DO_AMT as string,",
				"          BKNG_DO_DATE as string,",
				"          BKNG_IFA_AMT as string,",
				"          BKNG_INVGT_DATE as string,",
				"          BKNG_FLGN_DATE as string,",
				"          BKNG_PADS_DATE as string,",
				"          BKNG_FNLA_DATE as string,",
				"          BKNG_INVGT_STAT as string,",
				"          BKNG_CNCL_TYPE as string,",
				"          BKNG_CNCL_DATE as string,",
				"          BKNG_CNCL_RMRKS as string,",
				"          BKNG_ENQRY_NO as string,",
				"          BKNG_EMP_NO as string,",
				"          BKNG_CUST_NO as string,",
				"          BKNG_CRTE_DTIME as string,",
				"          BKNG_CRTE_EMP_NO as string,",
				"          BKNG_UPDT_DTIME as string,",
				"          BKNG_UPDT_EMP_NO as string,",
				"          BKNG_RADS_DATE as string,",
				"          BKNG_DO_ISSD_BY as string,",
				"          BKNG_DO_CMMT_PMNT_DATE as string,",
				"          BKNG_DO_ISSR_NAME as string,",
				"          BKNG_DBRS_DATE as string,",
				"          BKNG_EXPTD_DBRS_DATE as string,",
				"          BKNG_CMTD_DLVRY_DATE as string,",
				"          BKNG_RACK_RATE as string,",
				"          BKNG_DSA_CMSN as string,",
				"          BKNG_BRKR_PYMT_TYPE as string,",
				"          BKNG_BRKR_PYMT_AMT as string,",
				"          BKNG_SALE_TYPE as string,",
				"          BKNG_ADVNC_EMI as string,",
				"          BKNG_IFA_DATE as string,",
				"          BKNG_BASIC_PRICE as string,",
				"          BKNG_TAX_PRCNT as string,",
				"          BKNG_EDCE_PRCNT as string,",
				"          BKNG_HYPO_NAME as string,",
				"          BKNG_RFND_TOTAL_AMT as string,",
				"          BKNG_CGST_PRCNT as string,",
				"          BKNG_SGST_PRCNT as string,",
				"          BKNG_IGST_PRCNT as string,",
				"          BKNG_INTCOLOR_CODE as string,",
				"          BKNG_BILL_TO_NAME as string,",
				"          BKNG_BILL_TO_ADDR as string,",
				"          BKNG_BILL_TO_STATE as string,",
				"          BKNG_BILL_TO_CITY as string,",
				"          BKNG_BILL_TO_TEHSIL as string,",
				"          BKNG_BILL_TO_VILLAGE as string,",
				"          BKNG_BILL_TO_PIN as string,",
				"          BKNG_SHIP_TO_NAME as string,",
				"          BKNG_SHIP_TO_ADDR as string,",
				"          BKNG_SHIP_TO_STATE as string,",
				"          BKNG_SHIP_TO_CITY as string,",
				"          BKNG_SHIP_TO_TEHSIL as string,",
				"          BKNG_SHIP_TO_VILLAGE as string,",
				"          BKNG_SHIP_TO_PIN as string,",
				"          BKNG_FINCR_BRANCH_NM as string,",
				"          BKNG_RMRKS as string,",
				"          BKNG_SRC_FLG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SOBKNG",
				"source(output(",
				"          INVC_DLR_NO as string,",
				"          INVC_NO as string,",
				"          INVC_CORP_NO as string,",
				"          INVC_CMPN_NO as string,",
				"          INVC_TYPE as string,",
				"          INVC_CNFM_YN as string,",
				"          INVC_CNFM_DATE as string,",
				"          INVC_DATE as string,",
				"          INVC_INSR_YN as string,",
				"          INVC_INSR_AMT as string,",
				"          INVC_INSR_DATE as string,",
				"          INVC_INSR_TYPE as string,",
				"          INVC_INSR_NO as string,",
				"          INVC_RGSTN_NO as string,",
				"          INVC_RGSTN_DATE as string,",
				"          INVC_DLVRY_DATE as string,",
				"          INVC_ADDR1 as string,",
				"          INVC_ADDR2 as string,",
				"          INVC_ADDR3 as string,",
				"          INVC_RGN_CODE as string,",
				"          INVC_STCD_CODE as string,",
				"          INVC_CITY_CODE as string,",
				"          INVC_LCTN_CODE as string,",
				"          INVC_PIN_CODE as string,",
				"          INVC_CNCL_YN as string,",
				"          INVC_CNCL_DATE as string,",
				"          INVC_CNCL_RMRKS as string,",
				"          INVC_BKNG_NO as string,",
				"          INVC_CRTE_DTIME as string,",
				"          INVC_CRTE_EMP_NO as string,",
				"          INVC_UPDT_DTIME as string,",
				"          INVC_UPDT_EMP_NO as string,",
				"          INVC_ACTRL_USR_YN as string,",
				"          INVC_DN_DATE as string,",
				"          INVC_DLVRY_CNFM_YN as string,",
				"          INVC_CC_REQ as string,",
				"          INVC_CC_REASON as string,",
				"          INVC_CC_RDATE as string,",
				"          INVC_CC_RMRKS as string,",
				"          INVC_CC_RA_YN as string,",
				"          INVC_CC_STATUS as string,",
				"          INVC_CC_REQ_VERSION as string,",
				"          INVC_HMIL_EMP_CODE as string,",
				"          INVC_ENQRY_NO as string,",
				"          INVC_REGI_FILE_DOC_NO as string,",
				"          INVC_DLVRY_FILE_DOC_NO as string,",
				"          INVC_REGI_CUST_NO as string,",
				"          INVC_REGI_RELAT_SHIP as string,",
				"          INVC_VIN_NO as string,",
				"          INVC_BASIC_PRCE as string,",
				"          INVC_VRNT_PRCE as string,",
				"          INVC_ADVNC_EMI as string,",
				"          INVC_LOAN_AMT as string,",
				"          INVC_WTYNLTY_CFC_YN as string,",
				"          INVC_EQCR_SEQ as string,",
				"          INVC_ALCN_DATE as string,",
				"          INVC_SCHEME_YN as string,",
				"          INVC_MYKIA as string,",
				"          INVC_MYKIA_REG_DATE as string,",
				"          INVC_MK_VINLINK_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SWINVC",
				"EQRYTB derive(Occup_Key = concat(EQRY_DLR_NO ,'|', EQRY_CUST_NO),",
				"          Comp_key = concat(EQRY_MAKER_CODE,'|',EQRY_EXCHG_MODEL_CODE),",
				"          {First Follow-Up KEY} = concat(EQRY_DLR_NO ,'|',EQRY_ENQRY_NO),",
				"          Key = concat(EQRY_ENQRY_NO,'|',EQRY_DLR_NO),",
				"          EY = left(EQRY_DATE,4),",
				"          ED = right(EQRY_DATE,2),",
				"          EM = substring(EQRY_DATE, 6, 2),",
				"          Enquiry_Source_Type = iif(EQRY_SRC_FLG== 'MOB','MySales',    iif(length(EQRY_SR_NUM_REAL)>0,'Online','DMS')),",
				"          {Allocated/Unallocated} = iif(length(trim(EQRY_EMP_NO))<1, 'Unallocated', 'Allocated'),",
				"          Flag = 'Enquiry') ~> TransformationsStep1",
				"MappingCMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_STAT = CMM_CODE,",
				"          Enquiry_Status = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MappingSelect",
				"MappingSelect filter(CMM_GRP_CODE=='DSO0002') ~> FilterDSO0002",
				"TransformationsStep1, FilterDSO0002 lookup(EQRYTB@EQRY_STAT == MappingSelect@EQRY_STAT,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Status, false),",
				"     broadcast: 'auto')~> EnquiryStatusLookup",
				"Mapping2CMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_TYPE = CMM_CODE,",
				"          Enquiry_Type1 = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CMCDSelect",
				"CMCDSelect filter(CMM_GRP_CODE=='DSO0013' && EQRY_TYPE!='N') ~> FilterDSO0013",
				"EnquiryStatusLookup, FilterDSO0013 lookup(EQRYTB@EQRY_TYPE == CMCDSelect@EQRY_TYPE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Type1, false),",
				"     broadcast: 'auto')~> EnquiryType1Lookup",
				"Mapping3CMCD select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_CTGR_CODE = CMM_CODE,",
				"          Enquiry_Category_Type = CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mapping3Select",
				"Mapping3Select filter(CMM_GRP_CODE=='DSO0012') ~> FilterDSO0012",
				"EnquiryType1Lookup, FilterDSO0012 lookup(EQRYTB@EQRY_CTGR_CODE == Mapping3Select@EQRY_CTGR_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Category_Type, false),",
				"     broadcast: 'auto')~> EnquiryCategoryTypeLookup",
				"Mapping4SDENSC select(mapColumn(",
				"          ENSC_GRP_CODE,",
				"          EQRY_SUB_SRC_CODE = ENSC_CODE,",
				"          Enquiry_Sub_Source_Name = ENSC_NAME,",
				"          Enquiry_Source = ENSC_GRP_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Mapping4Select",
				"Mapping4Select filter(ENSC_GRP_CODE=='DSO0001') ~> FilterDSO0001",
				"EnquiryCategoryTypeLookup, FilterDSO0001 lookup(EQRYTB@EQRY_SUB_SRC_CODE == Mapping4Select@EQRY_SUB_SRC_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(Enquiry_Sub_Source_Name, false),",
				"     asc(Enquiry_Source, true),",
				"     broadcast: 'auto')~> EnquirySubSourceNameLookup",
				"EnquirySubSourceNameLookup derive(Enquiry_Sub_Source_Name = upper(iif(Enquiry_Sub_Source_Name=='Ads', 'Advertisements',Enquiry_Sub_Source_Name))) ~> Transformation2Step1",
				"Transformation2Step1 derive(Enquiry_Sub_Source_Name = iif(Enquiry_Sub_Source_Name=='MYKIA', replace(Enquiry_Sub_Source_Name, 'MYKIA', 'ONLINE'), Enquiry_Sub_Source_Name)) ~> Transformation3Step1",
				"select1 derive(Enquiry_Type2 = iif(Enquiry_Type1=='N','Neutral',Enquiry_Type1),",
				"          {Open/Close Flag} = iif(EQRYTB@EQRY_STAT=='01','Open',\r",
				"                 iif(EQRYTB@EQRY_STAT=='05','Open',\r",
				"                iif(EQRYTB@EQRY_STAT=='07','Open',\r",
				"                        iif(EQRYTB@EQRY_STAT=='09','Open','Close'))))) ~> Transformation1Step2",
				"Transformation1Step2 derive(Enquiry_Type = iif(\"Open/Close Flag\"=='Open','Enquiry_Type2',toString(null()))) ~> Transformation1Step3",
				"CDCUDT derive(Occup_Key = concat(CUDT_DLR_NO,'|',CUDT_CUST_NO)) ~> Transformation1Step5",
				"MappingOccupation select(mapColumn(",
				"          CUDT_JOB_CODE = OCCUPATION_CODE,",
				"          DETAIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MappingOccSelect",
				"Transformation1Step5, MappingOccSelect lookup(CDCUDT@CUDT_JOB_CODE == MappingOccSelect@CUDT_JOB_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(DETAIL, false),",
				"     broadcast: 'auto')~> OccNameLookup",
				"OccNameLookup select(mapColumn(",
				"          Occup_Key,",
				"          CUDT_JOB_CODE = MappingOccSelect@CUDT_JOB_CODE,",
				"          Occ_Name = DETAIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CDCUDTSelect",
				"Transformation1Step3, CDCUDTSelect join(TransformationsStep1@Occup_Key == CDCUDTSelect@Occup_Key,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinCDCUDT",
				"Transformation1Step6 select(mapColumn(",
				"          Dob = CSPM_BRTH_DATE,",
				"          Occup_Key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CDCSPMSelect",
				"CDCSPM derive(Occup_Key = concat(CSPM_DLR_NO,'|',CSPM_CUST_NO)) ~> Transformation1Step6",
				"LeftJoinCDCUDT, CDCSPMSelect join(TransformationsStep1@Occup_Key == CDCSPMSelect@Occup_Key,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinCDCSPM",
				"UCMAKE select(mapColumn(",
				"          EQRY_MAKER_CODE = MAKE_MAKER_CODE,",
				"          OEM = MAKE_FULL_DSCTN",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UCMAKESelect",
				"LeftJoinCDCSPM, UCMAKESelect join(EQRYTB@EQRY_MAKER_CODE == UCMAKESelect@EQRY_MAKER_CODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinUCMAKE",
				"UCMODL derive(Comp_key = concat(MODL_MAKER_CODE,'|',MODL_MODEL_CODE)) ~> Transformation1Step8",
				"Transformation1Step8 select(mapColumn(",
				"          OEM_MODEL = MODL_FULL_DSCTN,",
				"          Comp_key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UCMODLSelect",
				"LeftJoinUCMAKE, UCMODLSelect join(TransformationsStep1@Comp_key == UCMODLSelect@Comp_key,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinUCMODL",
				"EQCR select(mapColumn(",
				"          Dealer_No = EQCR_DLR_NO,",
				"          Link_Enquiry_No = EQCR_ENQRY_NO,",
				"          EQCR_SEQ,",
				"          Corp = EQCR_CORP_NO,",
				"          Comp = EQCR_CMPN_NO,",
				"          Model_Code = EQCR_MODEL_CODE,",
				"          TRIM_Code = EQCR_VRNT_CODE,",
				"          Enquiry_Qty = EQCR_QTY,",
				"          EQCR_CRTE_DTIME,",
				"          EQCR_CRTE_EMP_NO,",
				"          EQCR_MAKER_CODE,",
				"          EQCR_EXPECTED_PRICE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EQCRSelect",
				"EQRYSelect1, EQCRSelect join(EQRYSelect1@Dealer_No == EQCRSelect@Dealer_No,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinEQCR",
				"LeftJoinUCMODL select(mapColumn(",
				"          Dealer_No = EQRY_DLR_NO,",
				"          EQRY_ENQRY_NO,",
				"          EQRY_CORP_NO,",
				"          EQRY_CMPN_NO,",
				"          EQRY_DATE,",
				"          EQRY_SRC_CODE,",
				"          EQRY_STAT = EQRYTB@EQRY_STAT,",
				"          EQRY_TYPE = EQRYTB@EQRY_TYPE,",
				"          EQRY_TEST_DRVR_DATE,",
				"          EQRY_FNCE_YN,",
				"          EQRY_FNCER_CODE,",
				"          EQRY_LOAN_AMT,",
				"          EQRY_TENOR_MNTHS,",
				"          EQRY_EXCHG_YN,",
				"          EQRY_EXCHG_MODEL_CODE,",
				"          EQRY_EXCHG_SRC_CODE,",
				"          EQRY_EXPCT_PRICE,",
				"          EQRY_QUOTD_PRICE,",
				"          EQRY_CLSE_DATE,",
				"          EQRY_CLSE_TYPE,",
				"          EQRY_CLSE_RMRKS,",
				"          EQRY_EMP_NO,",
				"          EQRY_CUST_NO,",
				"          EQRY_LISTD_CORP,",
				"          EQRY_CORP_NAME,",
				"          EQRY_RFRL_BY,",
				"          EQRY_CRTE_DTIME,",
				"          EQRY_CRTE_EMP_NO,",
				"          EQRY_UPDT_DTIME,",
				"          EQRY_UPDT_EMP_NO,",
				"          EQRY_EQFU_SEQ,",
				"          EQRY_UPDT_DATE,",
				"          EQRY_TEST_DRIVE_YN,",
				"          EQRY_SR_NUM,",
				"          EQRY_SR_TYPE,",
				"          EQRY_FLW_STATUS,",
				"          EQRY_ASSOCIATE_ID,",
				"          EQRY_RSO_ID,",
				"          EQRY_FUEL_TYPE,",
				"          EQRY_PRESENT_CAR_YN,",
				"          EQRY_MAKER_CODE = EQRYTB@EQRY_MAKER_CODE,",
				"          EQRY_TD_VIN,",
				"          EQRY_CUST_BLOCK,",
				"          EQRY_BULK_SALE,",
				"          EQRY_P_MODL_YEAR,",
				"          EQRY_CLS_VAL,",
				"          EQRY_INCOM_GROUP,",
				"          EQRY_REFL_ID,",
				"          EQRY_REFL_PUNCH_DLR_NO,",
				"          EQRY_PLAN_DATE,",
				"          EQRY_ATIVT_NAME_CODE,",
				"          EQRY_ATIVT_LOC_CODE,",
				"          EQRY_NEWCAR_YN,",
				"          EQRY_FCALL_EMP_NO,",
				"          EQRY_APNT_DTIME,",
				"          VIST_DTIME,",
				"          LEAV_DTIME,",
				"          EQRY_CTGR_CODE = EQRYTB@EQRY_CTGR_CODE,",
				"          EQRY_SUB_SRC_CODE = EQRYTB@EQRY_SUB_SRC_CODE,",
				"          EQRY_CLSE_GRP_TYPE,",
				"          EQRY_BUDG_TYPE,",
				"          EQRY_CERT_TYPE,",
				"          EQRY_UC_SC_EMP_NO,",
				"          EQRY_TDRIVE_RMRKS,",
				"          EQRY_VC_RMRKS,",
				"          EQRY_REQ_TYPE,",
				"          EQRY_EMAILSEND_YN,",
				"          EQRY_SRC_FLG,",
				"          EQRY_SR_NUM_REAL,",
				"          EQRY_ENG_TYP,",
				"          EQRY_TRNSM_TYP,",
				"          SOQ_TAG_YN,",
				"          EQRY_EVAL_YN,",
				"          EQRY_EXCH_DN,",
				"          EQRY_FINAL_BP,",
				"          EQRY_CAMPGN_NO,",
				"          Occup_Key = TransformationsStep1@Occup_Key,",
				"          Comp_key = TransformationsStep1@Comp_key,",
				"          {First Follow-Up KEY},",
				"          Key,",
				"          EY,",
				"          ED,",
				"          EM,",
				"          Enquiry_Source_Type,",
				"          {Allocated/Unallocated},",
				"          Flag,",
				"          CMM_GRP_CODE = MappingSelect@CMM_GRP_CODE,",
				"          EQRY_STAT = MappingSelect@EQRY_STAT,",
				"          Enquiry_Status,",
				"          CMM_GRP_CODE = CMCDSelect@CMM_GRP_CODE,",
				"          EQRY_TYPE = CMCDSelect@EQRY_TYPE,",
				"          Enquiry_Type1,",
				"          CMM_GRP_CODE = Mapping3Select@CMM_GRP_CODE,",
				"          EQRY_CTGR_CODE = Mapping3Select@EQRY_CTGR_CODE,",
				"          Enquiry_Category_Type,",
				"          ENSC_GRP_CODE,",
				"          EQRY_SUB_SRC_CODE = Mapping4Select@EQRY_SUB_SRC_CODE,",
				"          Enquiry_Sub_Source_Name,",
				"          Enquiry_Source,",
				"          Enquiry_Type2,",
				"          {Open/Close Flag},",
				"          Enquiry_Type,",
				"          Occup_Key = CDCUDTSelect@Occup_Key,",
				"          CUDT_JOB_CODE,",
				"          Occ_Name,",
				"          Dob,",
				"          Occup_Key = CDCSPMSelect@Occup_Key,",
				"          EQRY_MAKER_CODE = UCMAKESelect@EQRY_MAKER_CODE,",
				"          OEM,",
				"          OEM_MODEL,",
				"          Comp_key = UCMODLSelect@Comp_key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EQRYSelect1",
				"TeamLeaderSelect derive(Team_Leader_Name = upper(split(TEAM_LEADER,';')[2]),",
				"          Team_Leader_Code = split(TEAM_LEADER,';')[1],",
				"          {Active/Inactive} = upper(split(TEAM_LEADER,';')[3]),",
				"          KEC = upper(KEC_NAME)) ~> Transformation1Step9",
				"Teamleader select(mapColumn(",
				"          TEAM_LEADER,",
				"          Team_leader_Joining_Date = TEAM_LEADER_JOINING_DATE,",
				"          KEC_Short_Code = KEC,",
				"          KEC_Long_Code = KEC_CODE,",
				"          KEC_Join_Date = KEC_JOIN_DATE,",
				"          KEC_Leave_Date = KEC_LEAVE_DATE,",
				"          Link_Enquiry_No = EQRY_ENQRY_NO,",
				"          Dealer_No = EQRY_DLR_NO,",
				"          KEC_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TeamLeaderSelect",
				"EQFU select(mapColumn(",
				"          Dealer_No = EQFU_DLR_NO,",
				"          Link_Enquiry_No = EQFU_ENQRY_NO,",
				"          Corporation_No = EQFU_CORP_NO,",
				"          Company_No = EQFU_CMPN_NO",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EQFUSelect",
				"SOBKNG select(mapColumn(",
				"          Dealer_No = BKNG_DLR_NO,",
				"          Booking_No = BKNG_NO,",
				"          Corporation_No = BKNG_CORP_NO,",
				"          Company_No = BKNG_CMPN_NO,",
				"          Booking_Date = BKNG_DATE,",
				"          BKNG_EXPCT_DLVRY_DATE,",
				"          BKNG_VRNT_PRICE,",
				"          BKNG_AMT,",
				"          BKNG_RCPT_TOTAL_AMT,",
				"          BKNG_ALCN_DATE,",
				"          BKNG_ALCN_VIN,",
				"          BKNG_DSA_NAME,",
				"          BKNG_CNCL_TYPE,",
				"          BKNG_CNCL_DATE,",
				"          Link_Enquiry_No = BKNG_ENQRY_NO,",
				"          BKNG_EMP_NO,",
				"          BKNG_CRTE_DTIME,",
				"          BKNG_CRTE_EMP_NO,",
				"          BKNG_CMTD_DLVRY_DATE,",
				"          BKNG_SALE_TYPE,",
				"          BKNG_BILL_TO_STATE,",
				"          BKNG_BILL_TO_CITY,",
				"          BKNG_BILL_TO_TEHSIL,",
				"          BKNG_BILL_TO_VILLAGE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SOBKNGSelect",
				"Transformation3Step1 select(mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}